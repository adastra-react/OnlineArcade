{"ast":null,"code":"var _jsxFileName = \"/Users/suneilengland/Desktop/DEVELOPMENT/MAJ-ARCADE-V5/src/Context/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'firebase/auth';\nimport { useHistory } from \"react-router\";\nimport { auth, db, storage } from '../firebase';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios'; // import useWindowFocus from 'use-window-focus';\n// import { getAuth, signInWithCustomToken } from \"firebase/auth\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  // const windowFocused = useWindowFocus();\n  const [currentUser, setCurrentUser] = useState([]); // const [userInfo, setUserInfo] = useState([]);\n\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false); // const [userOnline, setUserOnline] = useState([])\n\n  const [error, setError] = useState('');\n  const [aunthenticatedUsers, setAuthenticatedUsers] = useState([]);\n  let history = useHistory(); // const location = useLocation();\n\n  const handleImageChange = (e, setImage) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  useEffect(() => {\n    db.collection('Users').onSnapshot(snapshot => {\n      setAuthenticatedUsers(snapshot.docs.map(doc => doc.data()));\n    });\n  }, []); //   console.log(aunthenticatedUsers)\n  // const handleOnlineStatus = () => {\n  //   }\n  // const handleWindowFocus = () => {\n  //     if(windowFocused===true){\n  //         db.collection(\"Users\").where(\"pin\", \"==\", users.pin).get()\n  //             .then(querySnapshot => {\n  //             querySnapshot.docs[0].ref.update({\n  //                 onlineStatus: 'Online'\n  //             });\n  //         });\n  //     }else if(windowFocused===false){\n  //         db.collection(\"Users\").where(\"pin\", \"==\", users.pin).get()\n  //             .then(querySnapshot => {\n  //             querySnapshot.docs[0].ref.update({\n  //                 onlineStatus: 'Offline'\n  //             });\n  //         });\n  //     }else if(users===''){\n  //         db.collection(\"Users\").where(\"pin\", \"==\", users.pin).get()\n  //             .then(querySnapshot => {\n  //             querySnapshot.docs[0].ref.update({\n  //                 onlineStatus: 'Offline'\n  //             });\n  //         });\n  //     }\n  // }\n\n  const ImageUpload = (email, name, address, phone, image, setImage, setProgress) => {\n    const uploadTask = storage.ref(`image/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        db.collection('UnauthenticatedUsers').add({\n          email: email,\n          name: name,\n          address: address,\n          phone: phone,\n          imageUrl: url\n        });\n        setProgress(0);\n        setImage(null);\n      });\n    });\n  }; // const [FiretoreUsers, setFirestoreUsers] = useState([]);\n\n\n  const login = async (email, pin) => {\n    const LoginCred = {\n      email: email,\n      pin: pin\n    };\n    let logged_in_user = {};\n    await axios.post(`https://majestic-express-server.herokuapp.com/api/auth/login`, LoginCred) // .post(`http://localhost:5000/api/auth/login`, LoginCred)\n    .then(res => {\n      console.log(res.data);\n      logged_in_user = res.data; //   localStorage.removeItem(\"authToken\")\n      //   localStorage.removeItem(\"userOBJ\")\n\n      localStorage.setItem(\"authToken\", logged_in_user.token);\n      localStorage.setItem(\"userOBJ\", logged_in_user.loggedUser);\n\n      if (localStorage.getItem('authToken') && localStorage.getItem('userOBJ')) {\n        history.push('/games');\n      }\n    }).catch(error => {\n      setError(error);\n      console.log(error.message);\n    });\n    setUser(logged_in_user); // const setLoggedIn = {\n    //   logged_in: true\n    // };\n    // await axios.post(`http://localhost:5000/loggedin/${logged_in_user.loggedUser}`, setLoggedIn)\n    // await axios.post(`https://majestic-express-server.herokuapp.com/loggedin/${logged_in_user.loggedUser}`, setLoggedIn)\n  }; // const firestoreLogin = async (pin) => {\n  //     setError('')\n  //     await db.collection(\"Users\").where(\"pin\", \"==\", pin)\n  //     .get()\n  //     .then((querySnapshot) => {\n  //         querySnapshot.forEach((doc) => {\n  //             // doc.data() is never undefined for query doc snapshots\n  //             console.log(doc.data());\n  //             setUsers(doc.data());\n  //             // localStorage.setItem('loggedIn', true);\n  //             console.log(\"Success\")\n  //             history.push('/games')\n  //         });\n  //     }).catch(\n  //         // setError(\"No such user exists\"),\n  //         console.log(\"error\")\n  //     )\n  // }\n  // console.log(loggedIn)\n  // const verify = () => {\n  //     if(users){\n  //         console.log(users)\n  //         setLoggedIn(true);\n  //         localStorage.setItem('loggedIn', true);\n  //         // history.push('/profile')\n  //     }else{\n  //         setLoggedIn(false);\n  //         localStorage.setItem('loggedIn', false);\n  //     }\n  // }\n  // const uploadData = (email, name, address, phone) => {\n  //     db.collection('UnauthenticatedUsers')\n  //     .add({\n  //         email: email,\n  //         name: name,\n  //         address: address,\n  //         phone: phone,\n  //     }).then(() => {\n  //         console.log('Data submitted!')\n  //     }).catch((error) => {\n  //         console.log(error.message)\n  //     })\n  // }\n\n\n  const signInWIthCUstomToken = token => {\n    return auth.signInWithCustomToken(token);\n  };\n\n  const signUp = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  const logOut = async () => {\n    history.push('/');\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"userOBJ\");\n    const setLoggedIn = {\n      logged_in: false\n    };\n    await axios.post(`https://majestic-express-server.herokuapp.com/loggedin/${user.loggedUser}`, setLoggedIn);\n  }; // useEffect(() => {\n  //     if(!localStorage.getItem(\"authToken\") && !localStorage.getItem(\"authToken\")){\n  //         history.push('/')\n  //     }\n  // },[])\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(users => {\n      setUsers(users); // getUsers();\n    });\n    console.log(users); // handleWindowFocus();\n\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    logOut,\n    signUp,\n    login,\n    users,\n    user,\n    ImageUpload,\n    handleImageChange,\n    loggedIn,\n    setLoggedIn\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AuthProvider, \"6wfXZsJiukJrJvyo97Qvsoj3oqM=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/suneilengland/Desktop/DEVELOPMENT/MAJ-ARCADE-V5/src/Context/AuthContext.js"],"names":["React","useContext","useEffect","useState","useHistory","auth","db","storage","useLocation","axios","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","users","setUsers","user","setUser","loggedIn","setLoggedIn","error","setError","aunthenticatedUsers","setAuthenticatedUsers","history","handleImageChange","e","setImage","target","files","collection","onSnapshot","snapshot","docs","map","doc","data","ImageUpload","email","name","address","phone","image","setProgress","uploadTask","ref","put","on","progress","Math","round","bytesTransferred","totalBytes","console","log","alert","message","child","getDownloadURL","then","url","add","imageUrl","login","pin","LoginCred","logged_in_user","post","res","localStorage","setItem","token","loggedUser","getItem","push","catch","signInWIthCUstomToken","signInWithCustomToken","signUp","password","createUserWithEmailAndPassword","logOut","removeItem","logged_in","unsubscribe","onAuthStateChanged","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport 'firebase/auth';\nimport { useHistory } from \"react-router\";\nimport { auth, db, storage } from '../firebase';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\n// import useWindowFocus from 'use-window-focus';\n\n\n// import { getAuth, signInWithCustomToken } from \"firebase/auth\";\n\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n\n    // const windowFocused = useWindowFocus();\n    const [currentUser, setCurrentUser] = useState([]);\n    // const [userInfo, setUserInfo] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [user, setUser] = useState([])\n    const [loggedIn, setLoggedIn] = useState(false)\n    // const [userOnline, setUserOnline] = useState([])\n    const [error, setError] = useState('');\n    const [aunthenticatedUsers, setAuthenticatedUsers] = useState([]);\n    let history = useHistory();\n    // const location = useLocation();\n\n    const handleImageChange = (e, setImage) => {\n        if(e.target.files[0]){\n            setImage(e.target.files[0])\n        }\n    }\n\n    useEffect(() => {\n        db.collection('Users').onSnapshot(snapshot => {\n          setAuthenticatedUsers(snapshot.docs.map(doc => doc.data()))\n        })\n      }, [])\n\n    //   console.log(aunthenticatedUsers)\n\n    // const handleOnlineStatus = () => {\n        \n    //   }\n\n\n    // const handleWindowFocus = () => {\n    //     if(windowFocused===true){\n    //         db.collection(\"Users\").where(\"pin\", \"==\", users.pin).get()\n    //             .then(querySnapshot => {\n    //             querySnapshot.docs[0].ref.update({\n    //                 onlineStatus: 'Online'\n    //             });\n    //         });\n    //     }else if(windowFocused===false){\n    //         db.collection(\"Users\").where(\"pin\", \"==\", users.pin).get()\n    //             .then(querySnapshot => {\n    //             querySnapshot.docs[0].ref.update({\n    //                 onlineStatus: 'Offline'\n    //             });\n    //         });\n    //     }else if(users===''){\n    //         db.collection(\"Users\").where(\"pin\", \"==\", users.pin).get()\n    //             .then(querySnapshot => {\n    //             querySnapshot.docs[0].ref.update({\n    //                 onlineStatus: 'Offline'\n    //             });\n    //         });\n    //     }\n    // }\n\n    const ImageUpload = (email, name, address, phone, image, setImage, setProgress) => {\n        const uploadTask = storage.ref(`image/${image.name}`).put(image);\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progress)\n            },\n            (error) => {\n                console.log(error)\n                alert(error.message)\n            },\n            () => {\n                storage\n                .ref(\"images\")\n                .child(image.name)\n                .getDownloadURL()\n                .then(url => {\n                    db.collection('UnauthenticatedUsers')\n                    .add({\n                        email: email,\n                        name: name,\n                        address: address,\n                        phone: phone,\n                        imageUrl: url\n                    })\n                    setProgress(0)\n                    setImage(null)\n                })\n            }\n        )\n    }\n\n    // const [FiretoreUsers, setFirestoreUsers] = useState([]);\n\n    const login = async(email, pin) => {\n        const LoginCred = {\n            email: email,\n            pin: pin,\n          };\n      \n          let logged_in_user = {};\n          \n      \n          await axios\n            .post(`https://majestic-express-server.herokuapp.com/api/auth/login`, LoginCred)\n            // .post(`http://localhost:5000/api/auth/login`, LoginCred)\n            .then((res) => {\n              console.log(res.data)\n              logged_in_user = res.data\n              \n            //   localStorage.removeItem(\"authToken\")\n            //   localStorage.removeItem(\"userOBJ\")\n\n              localStorage.setItem(\"authToken\", logged_in_user.token)\n              localStorage.setItem(\"userOBJ\", logged_in_user.loggedUser)\n                if(localStorage.getItem('authToken') && localStorage.getItem('userOBJ')){\n                  history.push('/games')\n                }\n            })\n            .catch((error) => {\n              setError(error)\n              console.log(error.message)\n            });\n\n            setUser(logged_in_user)\n      \n            // const setLoggedIn = {\n            //   logged_in: true\n            // };\n      \n            // await axios.post(`http://localhost:5000/loggedin/${logged_in_user.loggedUser}`, setLoggedIn)\n            // await axios.post(`https://majestic-express-server.herokuapp.com/loggedin/${logged_in_user.loggedUser}`, setLoggedIn)\n    }    \n\n    // const firestoreLogin = async (pin) => {\n    //     setError('')\n    //     await db.collection(\"Users\").where(\"pin\", \"==\", pin)\n    //     .get()\n    //     .then((querySnapshot) => {\n    //         querySnapshot.forEach((doc) => {\n    //             // doc.data() is never undefined for query doc snapshots\n    //             console.log(doc.data());\n    //             setUsers(doc.data());\n    //             // localStorage.setItem('loggedIn', true);\n    //             console.log(\"Success\")\n    //             history.push('/games')\n    //         });\n    //     }).catch(\n    //         // setError(\"No such user exists\"),\n    //         console.log(\"error\")\n    //     )\n    // }\n// console.log(loggedIn)\n    // const verify = () => {\n    //     if(users){\n    //         console.log(users)\n    //         setLoggedIn(true);\n    //         localStorage.setItem('loggedIn', true);\n    //         // history.push('/profile')\n    //     }else{\n    //         setLoggedIn(false);\n    //         localStorage.setItem('loggedIn', false);\n    //     }\n    // }\n\n    // const uploadData = (email, name, address, phone) => {\n    //     db.collection('UnauthenticatedUsers')\n    //     .add({\n    //         email: email,\n    //         name: name,\n    //         address: address,\n    //         phone: phone,\n    //     }).then(() => {\n    //         console.log('Data submitted!')\n    //     }).catch((error) => {\n    //         console.log(error.message)\n    //     })\n    // }\n\n    \n    const signInWIthCUstomToken = (token) => {\n        return auth.signInWithCustomToken(token)\n    }\n\n    const signUp = (email, password) => {\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    const logOut = async() => {\n        history.push('/')\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"userOBJ\");\n        const setLoggedIn = {\n            logged_in: false\n          };\n    \n          await axios.post(`https://majestic-express-server.herokuapp.com/loggedin/${user.loggedUser}`, setLoggedIn)\n    }\n\n    // useEffect(() => {\n    //     if(!localStorage.getItem(\"authToken\") && !localStorage.getItem(\"authToken\")){\n    //         history.push('/')\n    //     }\n    // },[])\n\n    useEffect(() => {\n         const unsubscribe = auth.onAuthStateChanged(users => {\n            setUsers(users);\n            // getUsers();\n        })\n        console.log(users)\n        \n        // handleWindowFocus();\n        return unsubscribe\n    }, [])\n\n    \n    const value = {\n        currentUser,\n        logOut,\n        signUp,\n        login,\n        users,\n        user,\n        ImageUpload,\n        handleImageChange,\n        loggedIn,\n        setLoggedIn\n    }\n\n    return (\n        <AuthContext.Provider value={value} >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}